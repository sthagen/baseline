struct OldMSAConstants {
  field[2] publicKeyOfBuyer
  field[2] publicKeyOfSupplier
  field[4] tierBounds
  field[3] pricesByTier
  field[2] hashOfTieredPricing
  field minVolume
  field maxVolume
  field sku
  field[2] erc20ContractAddress
}

struct NewMSAConstants {
  field[2] publicKeyOfBuyer
  field[2] publicKeyOfSupplier
  field[2] hashOfTieredPricing
  field minVolume
  field maxVolume
  field sku
  field[2] erc20ContractAddress
}

struct MSAVariables {
  field accumulatedVolumeOrdered
  field accumulatedVolumeDelivered
}

struct OldCommitment {
  field[2] commitment
  field[2] salt
  field index // only used when spending a commitment
  field[2] nullifier // only used when spending a commitment
  field[4] siblingPath // only used when spending a commitment
}

struct NewCommitment {
  field[2] value
  field[2] salt
}

struct OldMSA {
  OldMSAConstants constants
  MSAVariables variables
  OldCommitment commitment
}

struct NewMSA {
  NewMSAConstants constants
  MSAVariables variables
  NewCommitment commitment
}

struct POConstants {
  field[2] publicKeyOfBuyer
  field[2] publicKeyOfSupplier
  field volume
  field price
  field sku
  field[2] erc20ContractAddress
}

struct POVariables {
  field accumulatedVolumeDelivered
}

struct NewPO {
  POConstants constants
  POVariables variables
  NewCommitment commitment
}

def main(field publicInputHash, private field[2] secretKeyOfBuyer, private field[2] root, private OldMSA oldMSA, private NewMSA newMSA, private NewPO newPO) -> ():

  oldMSA.constants.publicKeyOfBuyer == newMSA.constants.publicKeyOfBuyer

  return
